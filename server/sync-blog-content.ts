import { storage } from "./storage";

async function syncBlogContent() {
  console.log("üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –±–ª–æ–≥–∞...");
  
  try {
    const allPosts = await storage.getAllBlogPosts();
    
    for (const post of allPosts) {
      const updates: any = {};
      let needsUpdate = false;
      
      // –ï—Å–ª–∏ —É–∫—Ä–∞–∏–Ω—Å–∫–∞—è –≤–µ—Ä—Å–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–∞ –ø—É—Å—Ç–∞—è, –±–µ—Ä–µ–º –∏–∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø–æ–ª—è
      if (!post.titleUk && post.title) {
        updates.titleUk = post.title;
        needsUpdate = true;
      }
      
      // –ï—Å–ª–∏ —É–∫—Ä–∞–∏–Ω—Å–∫–∞—è –≤–µ—Ä—Å–∏—è —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –ø—É—Å—Ç–∞—è, –±–µ—Ä–µ–º –∏–∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø–æ–ª—è
      if (!post.contentUk && post.content) {
        updates.contentUk = post.content;
        needsUpdate = true;
      }
      
      // –ï—Å–ª–∏ —É–∫—Ä–∞–∏–Ω—Å–∫–∞—è –≤–µ—Ä—Å–∏—è –≤—ã–¥–µ—Ä–∂–∫–∏ –ø—É—Å—Ç–∞—è, –±–µ—Ä–µ–º –∏–∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø–æ–ª—è
      if (!post.excerptUk && post.excerpt) {
        updates.excerptUk = post.excerpt;
        needsUpdate = true;
      }
      
      if (needsUpdate) {
        await storage.updateBlogPost(post.id, updates);
        console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω –ø–æ—Å—Ç ${post.id}: ${post.title}`);
      }
    }
    
    console.log("üéâ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!");
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏:", error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é
syncBlogContent().then(() => {
  process.exit(0);
}).catch(error => {
  console.error("–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å:", error);
  process.exit(1);
});