import { storage } from "./storage";
import { translateBlogPost } from "./translate";

async function translateBlogPosts() {
  console.log("üîÑ –ü–µ—Ä–µ–≤–æ–¥ —Å—Ç–∞—Ç–µ–π –±–ª–æ–≥–∞...");
  
  try {
    const posts = await storage.getAllBlogPosts();
    
    // –ù–∞–π–¥–µ–º —Å—Ç–∞—Ç—å–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–¥–∞—é—Ç—Å—è –≤ –ø–µ—Ä–µ–≤–æ–¥–µ
    const postsToTranslate = posts.filter(p => 
      p.title.includes('–§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç—å—è333') || 
      p.title.includes('–°—É—á–∞—Å–Ω—ñ —Ç—Ä–µ–Ω–¥–∏')
    );
    
    for (const post of postsToTranslate) {
      console.log(`üìù –ü–µ—Ä–µ–≤–æ–¥–∏–º: ${post.title}`);
      
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π —è–∑—ã–∫
      const sourceLanguage = post.title.includes('–°—É—á–∞—Å–Ω—ñ') ? 'uk' : 'ru';
      
      try {
        // –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–µ–≤–æ–¥—ã
        const translations = await translateBlogPost(
          post.title,
          post.excerpt || '',
          post.content || '',
          sourceLanguage
        );
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—å—é —Å –ø–µ—Ä–µ–≤–æ–¥–∞–º–∏
        await storage.updateBlogPost(post.id, {
          titleUk: translations.uk.title,
          titleRu: translations.ru.title,
          titleEn: translations.en.title,
          excerptUk: translations.uk.excerpt,
          excerptRu: translations.ru.excerpt,
          excerptEn: translations.en.excerpt,
          contentUk: translations.uk.content,
          contentRu: translations.ru.content,
          contentEn: translations.en.content,
        });
        
        console.log(`‚úÖ –ü–µ—Ä–µ–≤–µ–¥–µ–Ω–∞ —Å—Ç–∞—Ç—å—è: ${post.title}`);
      } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–∞ —Å—Ç–∞—Ç—å–∏ ${post.title}:`, error);
      }
    }
    
    console.log("üéâ –ü–µ—Ä–µ–≤–æ–¥ –∑–∞–≤–µ—Ä—à–µ–Ω!");
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–∞:", error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–µ–≤–æ–¥
translateBlogPosts().then(() => {
  process.exit(0);
}).catch(error => {
  console.error("–ü–µ—Ä–µ–≤–æ–¥ –Ω–µ —É–¥–∞–ª—Å—è:", error);
  process.exit(1);
});